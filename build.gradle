buildscript {
    ext {
        springBootVersion = '1.5.21.RELEASE'
    }
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id 'com.github.ben-manes.versions' version '0.25.0'
}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'org.springframework.boot'


javadoc {
    source = sourceSets.main.allJava
    classpath = configurations.runtime
    options.windowTitle = 'FINT Java SSE Adapter Skeleton'
    options.memberLevel = JavadocMemberLevel.PRIVATE
    destinationDir = file('./javadocs/')
}

import org.apache.tools.ant.filters.ReplaceTokens
afterEvaluate {
    configure(processResources) {
        filesMatching('**/*.yml') {
            filter(ReplaceTokens, tokens: [version: version])
        }
    }
}


sourceCompatibility = 1.8

repositories {
    mavenLocal()
    jcenter()
    maven {
        url 'http://dl.bintray.com/fint/maven'
    }
}

dependencies {
    compile('com.github.springfox.loader:springfox-loader:2.0.0')
    compile('net.sf.saxon:Saxon-HE:9.9.1-5')
    compile('org.apache.commons:commons-lang3:3.9')
    compile('org.glassfish.jersey.core:jersey-client:2.29.1')
    compile('org.glassfish.jersey.core:jersey-common:2.29.1')
    compile('org.projectlombok:lombok:1.18.10')
    
    compile('no.fint:fint-sse:2.0.0-alpha-9')
    compile('no.fint:fint-event-model:3.0.0')
    compile('no.fint:fint-relation-model:1.1.5')

    compile("no.fint:fint-metamodell-model-java:${apiVersion}")

    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-devtools')
    compile('org.springframework.boot:spring-boot-actuator')

    testCompile('cglib:cglib-nodep:3.2.9')
    testCompile('org.spockframework:spock-spring:1.1-groovy-2.4')
    testCompile('org.spockframework:spock-core:1.1-groovy-2.4')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

task copyExternalDependencies(type: Copy) {
    from configurations.runtime
    into "$buildDir/deps/external"
    exclude '**/fint-*.jar'
}

task copyFintDependencies(type: Copy) {
    from configurations.runtime
    into "$buildDir/deps/fint"
    include '**/fint-*.jar'
}

build.dependsOn(copyExternalDependencies)
build.dependsOn(copyFintDependencies)

jar {
    manifest {
        attributes(
                "Manifest-Version": "1.0",
                "Main-Class": "no.fint.Application",
                "Specification-Version": "${apiVersion}",
                "Implementation-Version": "${version}",
                "Class-Path": configurations.runtime.collect { it.getName() }.join(' ')
        )
    }
}

bootRepackage.enabled = false

bootRun {
    systemProperties System.properties
}

test {
    testLogging {
        events 'passed', 'skipped', 'failed'
    }
}